AWSTemplateFormatVersion: '2010-09-09'

Description: Create the Compute resources for the AEM Author Dispatcher

Parameters:

  ComputeStackPrefixParameter:
    Type: String
    Description: The AEM Stack Compute Resources Stack Prefix

  SSLCertificateARNParameter:
    Type: String
    Description: The ARN for SSL Certificate

  AuthorDispatcherLoadBalancerHealthCheckTargetParameter:
    Type: String
    Description: AEM Author Dispatcher ELB Health Check Target

  AuthorDispatcherSubnetAParameter:
    Type: AWS::EC2::Subnet::Id
    Description: The Author Dispatcher Subnet in Availability Zone A

  AuthorDispatcherSubnetBParameter:
    Type: AWS::EC2::Subnet::Id
    Description: The Author Dispatcher Subnet in Availability Zone B

  AuthorDispatcherInstanceProfileParameter:
    Type: String
    Description: The Author Dispatcher Instance Profile

  AuthorDispatcherImageParameter:
    Type: AWS::EC2::Image::Id
    Description: The Author Dispatcher Image Id

  AuthorDispatcherInstanceTypeParameter:
    Type: String
    Description: The Author Dispatcher Instance Type

  ComputeKeyPairNameParameter:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The Compute Resources Key Pair Name

  AuthorDispatcherASGAvailabilityZoneListParameter:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: The Author Dispatcher Availability Zone List

#TODO: Combine this parameter with AuthorDispatcherSubnetAParameter and AuthorDispatcherSubnetBParameter
  AuthorDispatcherASGSubnetListParameter:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Author Dispatcher Subnets

  AuthorDispatcherASGMaxSizeParameter:
    Type: String
    Description: The Author Dispatcher Auto Scaling Group Maximum Size

  AuthorDispatcherASGMinSizeParameter:
    Type: String
    Description: The Author Dispatcher Auto Scaling Group Minimum Size

  AuthorDispatcherRootVolSizeParameter:
    Type: Number
    Description: Author Dispatcher Instances Root EBS Volume Size

  AuthorDispatcherDataVolSizeParameter:
    Type: Number
    Description: Author Dispatcher Instances Data EBS Volume Size

  AuthorDispatcherTagNameParameter:
    Type: String
    Description: The Author Dispatcher Name Tag

  AuthorDispatcherLoadBalancerTagNameParameter:
    Type: String
    Description: The Author Dispatcher Load Balancer Name Tag

  RolesStackNameParameter:
    Type: String
    Description: The AEM Roles Stack Name

  SecurityGroupsStackNameParameter:
    Type: String
    Description: The AEM Security Groups Stack Name

  MessagingStackNameParameter:
    Type: String
    Description: The AEM Messaging Stack Name

  InboundFromBastionHostSecurityGroupParameter:
    Type: String
    Description: Inbound Bound from Bastion Host Security Group Id

  DataBucketNameParameter:
    Type: String
    Description: Bucket name that stores Stack data files

  AemAwsStackProvisionerVersionParameter:
    Type: String
    Description: AEM AWS Stack Provisioner version number

Resources:

  AuthorDispatcherLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: 300
      CrossZone: true
      HealthCheck:
        Target:
          Ref: AuthorDispatcherLoadBalancerHealthCheckTargetParameter
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
        Timeout: '5'
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      - LoadBalancerPort: '443'
        Protocol: HTTPS
        InstancePort: '443'
        InstanceProtocol: HTTPS
        SSLCertificateId:
          Ref: SSLCertificateARNParameter
      Scheme: internal
      SecurityGroups:
      - Fn::ImportValue:
          Fn::Sub: ${SecurityGroupsStackNameParameter}-AuthorDispatcherELBSecurityGroup
      - Ref: InboundFromBastionHostSecurityGroupParameter
      Subnets:
      - Ref: AuthorDispatcherSubnetAParameter
      - Ref: AuthorDispatcherSubnetBParameter
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AuthorDispatcherLoadBalancerTagNameParameter}
      - Key: StackPrefix
        Value:
          Ref: ComputeStackPrefixParameter

  AuthorDispatcherLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          DeleteOnTermination: true
          VolumeSize:
            Ref: AuthorDispatcherRootVolSizeParameter
          VolumeType: gp2
      - DeviceName: /dev/sdb
        Ebs:
          DeleteOnTermination: true
          VolumeSize:
            Ref: AuthorDispatcherDataVolSizeParameter
          VolumeType: gp2
      IamInstanceProfile:
        Ref: AuthorDispatcherInstanceProfileParameter
      ImageId:
        Ref: AuthorDispatcherImageParameter
      InstanceMonitoring: false
      InstanceType:
        Ref: AuthorDispatcherInstanceTypeParameter
      KeyName:
        Ref: ComputeKeyPairNameParameter
      SecurityGroups:
      - Fn::ImportValue:
          Fn::Sub: ${SecurityGroupsStackNameParameter}-AuthorDispatcherSecurityGroup
      - Ref: InboundFromBastionHostSecurityGroupParameter
      UserData:
        Fn::Base64:
          Fn::Sub: "#!/bin/bash -x\n\
            \ source /etc/profile\n\
            \ mkdir -p /opt/shinesolutions/aem-aws-stack-builder/\n\
            \ aws s3 cp s3://${DataBucketNameParameter}/${ComputeStackPrefixParameter}/stack-init.sh /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\n\
            \ chmod 755 /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\n\
            \ /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh ${DataBucketNameParameter} ${ComputeStackPrefixParameter} author-dispatcher ${AemAwsStackProvisionerVersionParameter}\n"
  AuthorDispatcherAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        Ref: AuthorDispatcherASGAvailabilityZoneListParameter
      HealthCheckGracePeriod: 900
      HealthCheckType: ELB
      LaunchConfigurationName:
        Ref: AuthorDispatcherLaunchConfiguration
      LoadBalancerNames:
      - Ref: AuthorDispatcherLoadBalancer
      MaxSize:
        Ref: AuthorDispatcherASGMaxSizeParameter
      MinSize:
        Ref: AuthorDispatcherASGMinSizeParameter
      NotificationConfigurations:
      - NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        TopicARN:
          Fn::ImportValue:
            Fn::Sub: ${MessagingStackNameParameter}-AEMASGEventTopic
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AuthorDispatcherTagNameParameter}
        PropagateAtLaunch: true
      - Key: StackPrefix
        Value:
          Ref: ComputeStackPrefixParameter
        PropagateAtLaunch: true
      - Key: Component
        Value: author-dispatcher
        PropagateAtLaunch: true
      VPCZoneIdentifier:
        Ref: AuthorDispatcherASGSubnetListParameter

Outputs:

  AuthorDispatcherLoadBalancer:
    Value:
      Ref: AuthorDispatcherLoadBalancer
    Description: The Author Dispatcher Load Balancer

  AuthorDispatcherLoadBalancerDNSName:
    Value:
      Fn::GetAtt: [AuthorDispatcherLoadBalancer, DNSName]
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-LoadBalancerDNSName
    Description: The Author Dispatcher Load Balancer

  AuthorDispatcherLaunchConfiguration:
    Value:
      Ref: AuthorDispatcherLaunchConfiguration
    Description: The Author Dispatcher Launch Configuration

  AuthorDispatcherAutoScalingGroup:
    Value:
      Ref: AuthorDispatcherAutoScalingGroup
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AuthorDispatcherAutoScalingGroup
    Description: The Author Dispatcher Auto Scaling Group
