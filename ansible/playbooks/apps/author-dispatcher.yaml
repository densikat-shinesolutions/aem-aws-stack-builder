---
- name: AEM Author Dispatcher CloudFormation Stack
  hosts: all
  gather_facts: no
  connection: local

  tasks:

    - name: Get AEM Stack IAM Server Certificate
      iam_server_certificate_facts:
        name: "{{ author_dispatcher.certificate_name }}"
      register: aem_stack_certificate
      tags:
      - create

    - name: Create AEM Author Dispatcher Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ author_dispatcher.stack_name }}"
        region: "{{ aws.region }}"
        state: present
        disable_rollback: true
        template: "../../../cloudformation/apps/author-dispatcher.yaml"
        template_parameters:
          ComputeStackPrefixParameter: "{{ stack_prefix }}"
          SSLCertificateARNParameter: "{{ aem_stack_certificate.results[author_dispatcher.certificate_name].arn }}"
          AuthorDispatcherLoadBalancerHealthCheckTargetParameter: "{{ author_dispatcher.elb_health_check }}"
          AuthorDispatcherSubnetAParameter: "{{ aem_vpc.author_dispatcher_subnet_a_id}}"
          AuthorDispatcherSubnetBParameter: "{{ aem_vpc.author_dispatcher_subnet_b_id }}"
          AuthorDispatcherInstanceProfileParameter: "{{ author_dispatcher.instance_profile }}"
          AuthorDispatcherImageParameter: "{{ ami_ids.author_dispatcher }}"
          AuthorDispatcherInstanceTypeParameter: "{{ author_dispatcher.instance_type }}"
          ComputeKeyPairNameParameter: "{{ compute.key_pair_name }}"
          AuthorDispatcherASGAvailabilityZoneListParameter: "{{ aws.availability_zone_a }}, {{ aws.availability_zone_b }}"
          AuthorDispatcherASGSubnetListParameter: "{{ aem_vpc.author_dispatcher_subnet_a_id }}, {{ aem_vpc.author_dispatcher_subnet_b_id }}"
          AuthorDispatcherASGMaxSizeParameter: "{{ author_dispatcher.max_size }}"
          AuthorDispatcherASGMinSizeParameter: "{{ author_dispatcher.min_size }}"
          AuthorDispatcherRootVolSizeParameter: "{{ author_dispatcher.root_vol_size }}"
          AuthorDispatcherDataVolSizeParameter: "{{ author_dispatcher.data_vol_size }}"
          AuthorDispatcherTagNameParameter: "{{ stack_prefix }}-{{ author_dispatcher.tag_name }}"
          AuthorDispatcherLoadBalancerTagNameParameter: "{{ stack_prefix }}-{{ author_dispatcher.load_balancer.tag_name }}"
          RolesStackNameParameter: "{{ stack_prefix }}-{{ roles.stack_name }}"
          SecurityGroupsStackNameParameter: "{{ stack_prefix }}-{{ security_groups.stack_name }}"
          MessagingStackNameParameter: "{{ stack_prefix }}-{{ messaging.stack_name }}"
          InboundFromBastionHostSecurityGroupParameter: "{{ compute.inbound_from_bastion_host_security_group }}"
          DataBucketNameParameter: "{{ s3.data_bucket_name }}"
          AemAwsStackProvisionerVersionParameter: "{{ library.aem_aws_stack_provisioner_version }}"

      tags:
      - create

    - name: Check if a Stack Exists
      command: aws cloudformation describe-stacks --stack-name "{{ stack_prefix }}-{{ author_dispatcher.stack_name }}" --query 'Stacks[].StackName'
      ignore_errors: True
      register: stack_query
      tags:
        - delete

    - name: Report Stack Problem
      debug:
        msg: Stack "{{ stack_prefix }}-{{ author_dispatcher.stack_name }}" does not exist or some other errors occured
      when:
        "stack_query.rc != 0"
      tags:
        - delete

    - name: Delete AEM Author Dispatcher Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ author_dispatcher.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      when:
        "stack_query.rc == 0"
      tags:
      - delete
